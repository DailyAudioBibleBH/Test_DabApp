<?xml version="1.0" encoding="UTF-8"?>
<local:DabBaseContentPage xmlns:t="clr-namespace:SlideOverKit;assembly=SlideOverKit" xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" x:Class="DABApp.DabPlayerPage" xmlns:local="clr-namespace:DABApp;assembly=DABApp" xmlns:ios="clr-namespace:MediaPlayer;assembly=Xamarin.iOS;targetPlatform=iOS" xmlns:controls="clr-namespace:SegmentedControl.FormsPlugin.Abstractions;assembly=SegmentedControl.FormsPlugin.Abstractions" xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms">
    <t:MenuContainerPage.Resources>
        <ResourceDictionary>
            <local:StringConverter x:Key="stringer" />
            <local:InverseConverter x:Key="inverser" />
        </ResourceDictionary>
    </t:MenuContainerPage.Resources>
    <t:MenuContainerPage.Content>
        <RelativeLayout x:Name="ListenContainer">
            <ff:CachedImage x:Name="BackgroundImage" Aspect="AspectFill" RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}" />
            <StackLayout x:Name="Container" VerticalOptions="FillAndExpand" RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}" RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1}">
                <StackLayout Padding="20, 20, 20, 0" Spacing="10">
                    <controls:SegmentedControl x:Name="SegControl" TintColor="White" SelectedSegment="0" SelectedTextColor="Black">
                        <controls:SegmentedControl.Children>
                            <controls:SegmentedControlOption Text="Listen" />
                            <controls:SegmentedControlOption Text="Read" />
                            <controls:SegmentedControlOption Text="Journal" />
                        </controls:SegmentedControl.Children>
            </controls:SegmentedControl>
                    <BoxView x:Name="Divider" IsVisible="false" HeightRequest="1" HorizontalOptions="FillAndExpand" Color="{DynamicResource InputBackgroundColor}" />
                </StackLayout>
              <StackLayout x:Name="Listen" IsVisible="true" VerticalOptions="FillAndExpand">
                <StackLayout VerticalOptions="CenterAndExpand">
                  <Label Text="{Binding title}" HorizontalOptions="Center" HorizontalTextAlignment="Center" FontSize="30" Style="{StaticResource playerLabelStyle}" FontAttributes="Bold" AutomationProperties.IsInAccessibleTree="true"/>
                  <Label Text="{Binding channel_title}" HorizontalOptions="Center" HorizontalTextAlignment="Center" FontSize="Micro" FontAttributes="Bold" Style="{StaticResource playerLabelStyle}" Opacity=".6528" AutomationProperties.IsInAccessibleTree="true"/>
                  <ContentView Padding="40, 10, 40, 0">
                    <Label Text="{Binding description}" HorizontalOptions="Center" HorizontalTextAlignment="Center" FontSize="Small" Style="{StaticResource playerLabelStyle}"/>
                  </ContentView>
                </StackLayout>
                <local:DabSeekBar x:Name="SeekBar" HorizontalOptions="FillAndExpand" Minimum="0" VerticalOptions="EndAndExpand" Value="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=CurrentTime}" Maximum="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=TotalTime}" Margin="20, 0, 20, 0"/>
                <StackLayout x:Name="TimeStrings" Orientation="Horizontal" VerticalOptions="Start" Padding="25, 0, 25, 0">
                  <Label Text="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=CurrentTime, Converter={StaticResource stringer}}" HorizontalOptions="StartAndExpand" Style="{StaticResource playerLabelStyle}" FontSize="Micro" />
                  <Label Text="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=RemainingTime}" HorizontalOptions="EndAndExpand" Style="{StaticResource playerLabelStyle}" FontSize="Micro" />
                </StackLayout>
                <Grid VerticalOptions="StartAndExpand" x:Name="PlayerControls" AutomationProperties.IsInAccessibleTree="false">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="17*" />
                    <ColumnDefinition Width="17*" />
                    <ColumnDefinition Width="32*" />
                    <ColumnDefinition Width="17*" />
                    <ColumnDefinition Width="17*" />
                  </Grid.ColumnDefinitions>
                  <Image x:Name="backwardButton" Source="ic_replay_30_white_3x.png" Grid.Row="0" Grid.Column="1" HeightRequest="25" WidthRequest="25" Aspect="AspectFit" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="Rewind 30 seconds">
                    <Image.GestureRecognizers>
                      <TapGestureRecognizer Tapped="OnBack30"/>
                    </Image.GestureRecognizers>
                  </Image>
                  <Image x:Name="PlayPause" Source="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=PlayPauseButtonImageBig}" Grid.Row="0" Grid.Column="2" HeightRequest="100" WidthRequest="100" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=PlayPauseAccessible}">
                    <Image.GestureRecognizers>
                      <TapGestureRecognizer Tapped="OnPlay"/>
                    </Image.GestureRecognizers>
                  </Image>
                  <Image x:Name="Initializer" IsVisible="false" Source="ic_play_circle_outline_white_3x.png" Grid.Row="0" Grid.Column="2" HeightRequest="100" WidthRequest="100" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="Play button">
                    <Image.GestureRecognizers>
                      <TapGestureRecognizer Tapped="OnInitialized"/>
                    </Image.GestureRecognizers>
                  </Image>
                  <Image x:Name="forwardButton" Source="ic_forward_30_white_3x.png" Grid.Row="0" Grid.Column="3" HeightRequest="25" WidthRequest="25" Aspect="AspectFit" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="Fast forward 30 seconds">
                    <Image.GestureRecognizers>
                      <TapGestureRecognizer Tapped="OnForward30"/>
                    </Image.GestureRecognizers>
                  </Image>
                </Grid>
                <Grid VerticalOptions="EndAndExpand" Padding="0, 0, 0, 20">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="3*"/>
                  </Grid.ColumnDefinitions>
                  <Button x:Name="Favorite" Image="{Binding favoriteSource}" Style="{StaticResource imageButtonStyle}" Clicked="OnFavorite" Grid.Row="0" Grid.Column="0" WidthRequest="15" HeightRequest="15" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="{Binding favoriteAccessible}"/>
                  <local:AudioOutputView x:Name="Output" WidthRequest="25" HeightRequest="25" Grid.Row="0" Grid.Column="1" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="Change audio source"/>
                  <Button x:Name="Share" Clicked="OnShare" Image="ic_share_white_3x.png" Style="{StaticResource imageButtonStyle}" Grid.Row="0" Grid.Column="2" WidthRequest="10" HeightRequest="10" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="Share button"/>
                </Grid>
                <StackLayout VerticalOptions="End" HorizontalOptions="FillAndExpand" Orientation="Horizontal" BackgroundColor="{DynamicResource MarkCompletedBackground}" Padding="0, 10, 0, 10">
                    <Button x:Name="Completed" Image="{Binding listenedToSource}" Style="{StaticResource imageButtonStyle}" HorizontalOptions="EndAndExpand" HeightRequest="20" WidthRequest="20" Clicked="OnListened" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="{Binding listenAccessible}"/>
                    <Label HorizontalOptions="StartAndExpand" Text="Mark as Listened" Style="{StaticResource playerLabelStyle}" AutomationProperties.IsInAccessibleTree="true" AutomationProperties.HelpText="Mark as Listened">
                      <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnListened"/>
                      </Label.GestureRecognizers>
                    </Label>
                </StackLayout>
              </StackLayout>
                <StackLayout x:Name="Read" IsVisible="false" Padding="20, 20, 20, 20" Spacing="10" BackgroundColor="{DynamicResource ReadBackgroundColor}">
					<ScrollView>
						<StackLayout>
                    <Label x:Name="ReadTitle" VerticalOptions="Start" FontSize="Small" Style="{StaticResource secondaryLabelStyle}"/>
                    <Label x:Name="ReadExcerpts" VerticalOptions="Start" FontSize="Micro" Style="{StaticResource secondaryLabelStyle}"/>
                    <Label x:Name="AltWarning" IsVisible="false" VerticalOptions="Start" FontSize="Micro" Text="Due to copyright restrictions, the passage displayed here may be different than the passage being read." />
					<local:HtmlLabel x:Name="ReadText" VerticalOptions="StartAndExpand" />
						</StackLayout>
					</ScrollView>
                </StackLayout>
                <StackLayout x:Name="Journal" IsVisible="false" VerticalOptions="FillAndExpand" Padding="20, 0, 20, 20" Spacing="10">
					<StackLayout Orientation="Horizontal">
                    	<Label x:Name="JournalTitle" Text="{Binding title}" FontSize="Micro" />
						<Label x:Name="AboutFormat" Text="About Formatted Text" FontSize="Micro" TextColor="{StaticResource InputBackgroundColor}" HorizontalTextAlignment="End" HorizontalOptions="EndAndExpand"/>
					</StackLayout>
                    <local:DarkKeyboardEditor x:Name="JournalContent" Text="{Binding Source={x:Static local:JournalTracker.Current}, Path=Content}" TextChanged="OnJournalChanged" Focused="OnEdit" Unfocused="OffEdit" FontSize="Small" HeightRequest="{Binding Source={x:Static local:JournalTracker.Current}, Path=EntryHeight}"/>
                  <Label x:Name="JournalWarning" Text="You must be connected to the journal server inorder for changes to be saved.  Click here to try and reconnect." Style="{StaticResource warningLabelStyle}"  IsVisible="{Binding Source={x:Static local:JournalTracker.Current}, Path=IsConnected, Converter={StaticResource inverser}}"  VerticalOptions="EndAndExpand" AutomationProperties.IsInAccessibleTree="true">
                    <Label.GestureRecognizers>
                      <TapGestureRecognizer Tapped="OnReconnect"/>
                    </Label.GestureRecognizers>
                  </Label>
                  <BoxView x:Name="spacer" Style="{StaticResource SpacerStyle}"/>
                </StackLayout>
                <StackLayout x:Name="LoginJournal" IsVisible="false" VerticalOptions="FillAndExpand" Padding="20" Spacing="20">
                    <Label Text="You need to be logged in to use this feature." FontSize="Large" FontAttributes="Bold" />
                    <Label Text="Create an account and join us each day as we read through the bible every year." FontSize="Medium" />
                    <Button x:Name="Login" Text="Log in" Clicked="OnLogin" Style="{StaticResource highlightedButtonStyle}" />
                </StackLayout>
            </StackLayout>
    </RelativeLayout>
  </t:MenuContainerPage.Content>
</local:DabBaseContentPage>